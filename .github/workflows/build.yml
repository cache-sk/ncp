name: Build and Release

on:
  push:
    tags:
      - 'v0.[0-9]+.[0-9]'

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.20.0'

      - name: Setup Qemu
        uses: docker/setup-qemu-action@v2 # v2
  
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2 # v2
       
      - name: Docker login GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Docker Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Release NCP
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  
      - name: Notify on failure
        uses: kha7iq/pingme-action@v1
        if: failure()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHANNELS: ${{ secrets.TELEGRAM_CHANNELS }}
          TELEGRAM_TITLE: 'üü¢ New Release: ${{ github.ref }}'
          TELEGRAM_MESSAGE: 'Event is triggered by ${{ github.event_name }} ‚ùå  ${{ job.status }}'
        with:
          service: telegram

      - name: Notify on success
        uses: kha7iq/pingme-action@v1
        if: success()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHANNELS: ${{ secrets.TELEGRAM_CHANNELS }}
          TELEGRAM_TITLE: 'üü¢ New Release: ${{ github.ref }}'
          TELEGRAM_MESSAGE: 'Event is triggered by ${{ github.event_name }} ‚úÖ  ${{ job.status }}'
        with:
          service: telegram